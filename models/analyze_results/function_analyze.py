from pydantic import BaseModel, Field
from typing import Literal

class FunctionClassifyResponse(BaseModel):
    """Response of function classify"""
    function_name: str = Field(description="Name of the function to be classified")
    function_type: Literal["RECV", "IRQ", "RETURNOK", "SKIP", "NEEDCHECK", "NODRIVER"] = Field(description="Classification of driver functions based on their functionality and characteristics")
    functionality: str = Field(description="Description of the main functionality of the function")
    classification_reason: str = Field(description="Explanation of the classification result")
    has_replacement: bool = Field(description="Whether the function has a replacement")
    function_replacement: str = Field(description="Function content generated by llm after analyzing the function (if any)")
